//typedef struct uiSettings
//{
// Server properties ... This server 
QuanticksMain //  std::string	strServerName;

Y  		//  bool		bMemberOfFarm;	// Y/N
TickMainFarm 	//  std::string	strFarmName;
5478  		//  uint		uiListenOnPort;  // for incoming commands in case Member of bMemberOfFarm = Y  (range  5000...65000)


// Server Role ... Check Boxes
0124   		//  int iRole;  // Get it from enum   0= Receive Feed  1= Parse  2= Build Book  3= Save to DB    4= Play Back  

Y  		//  bool	bDistributor; // Different than role a little bit...Y/N
8564  		//  uint 	uiListenPort;  // Case Y above....listen on which Port? (range  5000...65000)

// Partition to process

Y  		//  bool  bPartitionActive;  // Y/N to  process....can keep the partition info but in an inactive state

A   		//  int 	iBeginRange;  // e.g 'A'  or 'G'
Z  		//   int 	iEndRange;	
AAPL		//	char  strInclude[5];  // include from another range that was excluded from another partition
AAPL  		// char  strExclude[5]; 	// Exclude to be included in another partition
  
  
// Feed connection parameters case option 0
amro  		//  char		szUserName[SIZE_OF_NAME];
NasdPass	// char		szPassword[SIZE_OF_PASSWORD];
  
1234567  	//  unsigned long	ulIPAddress;
8743 		//  uint 		uiPort;

85236   	//  unsigned long	ulIPAddress1;
7589  		//  uint		uiPort1;

100  		//  unsigned long	dwBufferSize;
  
// ODBC connection parameters in case option 3 
MySqlConn     	//  std::string  	strConnName;  // from ODBC
MySqlUserName  	//  char		szDBUserName[SIZE_OF_NAME];
MySqlPass     	//  char		szDBPassword[SIZE_OF_PASSWORD];
 
// For Test Feed or Replay
TestFileName   `//  std::string	strFileName;  // Test file name ...pick from UI dialog
50     		//  uint	  uiDelay;   // range...percent = 0..99       --  0 = full speed  50 = 1/2 speed  75 = 1/4 speed    // or suggest
  
// Logging 
1   		//  bool 		bLog;  // Y/N
3 		//  ushort 	usLoggingLevel;  // 0: Info   1: Errors  2: Warnings  3:All
LogFileName  	// std::string  	strLogFileName;  // Entry field
  
// System capacity
9000 		//    uint		uiNumberOfIssues; // Max number of issues approx...9000 = default. Will reserve an entry for each issue in a hash table.
300            // in Mega BYtes  u_int64_t 	ui64SizeOfMemoryMappedFile; // Will set Default later...
 
//}SETTINGS;
