CXX = g++
CXXFLAGS = -O3 -g -w -Wall -Wextra -ansi -pedantic -MD
LINK.o = $(LINK.cpp)
.PHONY = all clean

ifeq ($(GPROF),yes)
CXXFLAGS += -pg
endif

ifeq ($(GCOV),yes)
CXXFLAGS += -O0 -DNDEBUG -fno-elide-constructors -fno-inline -fprofile-arcs -ftest-coverage
endif

SRCS = $(wildcard src/*.cpp)

all: foo

foo: $(SRCS:%.cpp:%.o)

clean:
	$(RM) -f foo core gmon.out *.o *.d *.gcno *.gcov *.gcda

-include *.d

------------------------------------------
#default: QuantServer
#	g++ -o quantserver main.cpp
#
CC = g++
# define any compile-time flags
CFLAGS = -Wall -g

#CFLAGS = .I
# define any directories containing header files other than /usr/include
#
INCLUDES = -I/home/amro/projects/QuantServer  -I../Include   -I../Common 

# define library paths in addition to /usr/lib
#   if I wanted to include libraries not in /usr/lib I'd specify
#   their path using -Lpath, something like:
LFLAGS = -L/home/amro/projects/QuantServer  -L../lib

# define any libraries to link into executable:
#   if I want to link in libraries (libx.so or libx.a) I use the -llibname 
#   option, something like (this will link in libmylib.so and libm.so:
LIBS = -lmylib -lm

$(BINARY): $(OBJS)
	$(CXX) -o $@ $^ $(LFLAGS) $(LIBS)
	
QuantServer: main.o FillMsgStructs.o 
	$(CC) $(CFLAGS) -o QuantServer main.o FillMsgStructs.o

main.o: main.cpp main.h
	$(CC) $(CFLAGS) -c main.cpp

FillMsgStructs.o:  FillMsgStructs.cpp  FillMsgStructs.h NQTV.h
	$(CC) $(CFLAGS) -c FillMsgStructs.cpp
# To start over from scratch, type 'make clean'.  This
# removes the executable file, as well as old .o object
# files and *~ backup files:
#
clean:
	rm -f QuantServer *.o *~